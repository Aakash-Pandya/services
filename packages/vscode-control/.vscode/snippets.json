{
	"Require": {
		"prefix": "req",
		"body": [
			"const { ${1:method} } = require('${0}')"
		],
		"description": "require"
	},
	"RequireX": {
		"prefix": "reqx",
		"body": [
			"const { ${1:method} } = require('./${1:method}')"
		],
		"description": "requireX"
	},
	"Import": {
		"prefix": "im",
		"body": [
			"import { ${1:method} } from '${0}'"
		],
		"description": "import"
	},
	"ImportX": {
		"prefix": "imx",
		"body": [
			"import { ${1:methodPath} } from './${1:methodPath}'"
		],
		"description": "import"
	},
	"Bind": {
		"prefix": "bin",
		"body": [
			"this.${1:method} = this.${1:method}.bind(this)${0}"
		],
		"description": "bind"
	},
	"commentX": {
		"prefix": "comx",
		"body": [
			"/**",
			" * $0",
			" */"
		],
		"description": "commentx"
	},
	"commentMultiline": {
		"prefix": "comm",
		"body": [
			"/*",
			"  $0",
			"*/"
		],
		"description": "comment multiline"
	},
	"commentx": {
		"prefix": "com",
		"body": [
			"// $0",
			"// ============================================"
		],
		"description": "comment"
	},
	"StringTemplate": {
		"prefix": "st",
		"body": [
			"`${${0}}`"
		],
		"description": "st"
	},
	"StringTemplatex": {
		"prefix": "stx",
		"body": [
			"`${${0}}${}`"
		],
		"description": "stx"
	},
	"Test": {
		"prefix": "test",
		"body": [
			"test('${1:happy}', () => {",
			"\t$0",
			"})"
		],
		"description": "test"
	},
	"TestAsync": {
		"prefix": "testa",
		"body": [
			"test('${1:happy}', async () => {",
			"\tconst result = await $0",
			"\texpect(result).toEqual(expected)",
			"})"
		],
		"description": "test"
	},
	"Export": {
		"prefix": "exportx",
		"body": [
			"exports.${1:module} = ${1:module}"
		],
		"description": "export"
	},
	"ExpectTruthy": {
		"prefix": "expt",
		"body": [
			"expect(",
			"\t$0",
			").toBeTruthy()"
		],
		"description": "ext"
	},
	"ExpectFalsy": {
		"prefix": "expf",
		"body": [
			"expect(",
			"\t$0",
			").toBeFalsy()"
		],
		"description": "x"
	},
	"ExpectEqual": {
		"prefix": "exp",
		"body": [
			"expect(",
			"\t${1:testResult}",
			").toEqual($0)"
		]
	},
	"ExpectSnapshot": {
		"prefix": "snap",
		"body": [
			"expect(",
			"\t$0",
			").toMatchSnapshot()"
		]
	},
	"ExpectInlineSnapshot": {
		"prefix": "inline",
		"body": [
			"expect(",
			"\t$0",
			").toMatchInlineSnapshot()"
		]
	},
	"Rambdax": {
		"prefix": "ramx",
		"body": [
			"import { $0 } from 'rambdax'"
		]
	},
	"RambdaxRequire": {
		"prefix": "ramxq",
		"body": [
			"const { $0 } = require('rambdax')"
		]
	},
	"LogRoot": {
		"prefix": "lgr",
		"body": [
			"console.log({$0})"
		],
		"description": "log"
	},
	"Lg": {
		"prefix": "lg",
		"body": [
			"console.log($0)"
		],
		"description": "simple log"
	},
	"LogDebug": {
		"prefix": "lgd",
		"body": [
			"console.log($0)",
			"debugger"
		],
		"description": "log and debug"
	}
}