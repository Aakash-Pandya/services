

  tap
    ✓ returns a function that always returns its argument
    ✓ may take a function as the first argument that executes with tap's argument
    1) can act as a transducer
    2) dispatches to transformer objects


  2 passing (81ms)
  2 failing

  1) tap
       can act as a transducer:

      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:
+ actual - expected

+ '[{"@@transducer/init": function Array() { [native code] }, "@@transducer/result": function _identity(x) {\n' +
+   '        return x;\n' +
+   '    }, "@@transducer/step": function (xs, x) {\n' +
+   '                return _concat(xs, [x]);\n' +
+   '            }}]'
- '[1, 2, 3, 4, 5]'
      + expected - actual

      -[{"@@transducer/init": function Array() { [native code] }, "@@transducer/result": function _identity(x) {
      -        return x;
      -    }, "@@transducer/step": function (xs, x) {
      -                return _concat(xs, [x]);
      -            }}]
      +[1, 2, 3, 4, 5]
      
      at strictEqual (test/shared/eq.js:8:10)
      at Context.eq (test/tap.js:33:5)
      at processImmediate (internal/timers.js:439:21)

  2) tap
       dispatches to transformer objects:

      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:
+ actual - expected

+ '{"@@transducer/init": function () {\n' +
+   '    return [];\n' +
+   '  }, "@@transducer/result": function (x) {\n' +
+   '    return x;\n' +
+   '  }, "@@transducer/step": function (acc, x) {\n' +
+   '    return acc.concat([x]);\n' +
+   '  }}'
- '{"f": function f1(a) {\n' +
-   '    if (arguments.length === 0 || _isPlaceholder(a)) {\n' +
-   '      return f1;\n' +
-   '    } else {\n' +
-   '      return fn.apply(this, arguments);\n' +
-   '    }\n' +
-   '  }, "xf": {"@@transducer/init": function () {\n' +
-   '    return [];\n' +
-   '  }, "@@transducer/result": function (x) {\n' +
-   '    return x;\n' +
-   '  }, "@@transducer/step": function (acc, x) {\n' +
-   '    return acc.concat([x]);\n' +
-   '  }}}'
      + expected - actual

      -{"@@transducer/init": function () {
      +{"f": function f1(a) {
      +    if (arguments.length === 0 || _isPlaceholder(a)) {
      +      return f1;
      +    } else {
      +      return fn.apply(this, arguments);
      +    }
      +  }, "xf": {"@@transducer/init": function () {
           return [];
--
           return x;
--
           return acc.concat([x]);
      -  }}
      +  }}}
      
      at strictEqual (test/shared/eq.js:8:10)
      at Context.eq (test/tap.js:40:5)
      at processImmediate (internal/timers.js:439:21)



